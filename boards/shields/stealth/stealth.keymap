/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../../../include/zmk-helpers/helper.h"
#include "../../../include/zmk-helpers/key-labels/34.h"
#include "../../../include/zmk-helpers/unicode-chars/german.dtsi"


/ {
    behaviors {
        // Custom shift behaviors for number keys
        shift_0: shift_0_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp EQUAL>; // Normal: 0, Shift: )
            mods = <MOD_LSFT>;
        };
        shift_1: shift_1_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&kp PLUS>; // Normal: 1, Shift: +
            mods = <MOD_LSFT>;
        };
        shift_2: shift_2_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp DOUBLE_QUOTES>; // Normal: 2, Shift: "
            mods = <MOD_LSFT>;
        };
        shift_3: shift_3_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&kp ASTERISK>; // Normal: 3, Shift: *
            mods = <MOD_LSFT>;
        };
        shift_4: shift_4_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp DOLLAR>; // Normal: 4, Shift: $
            mods = <MOD_LSFT>;
        };
        shift_5: shift_5_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N5>, <&kp PERCENT>; // Normal: 5, Shift: %
            mods = <MOD_LSFT>;
        };
        shift_6: shift_6_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp AMPERSAND>; // Normal: 6, Shift: &
            mods = <MOD_LSFT>;
        };
        shift_7: shift_7_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp FSLH>; // Normal: 7, Shift: /
            mods = <MOD_LSFT>;
        };
        shift_8: shift_8_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp LEFT_PARENTHESIS>; // Normal: 8, Shift: (
            mods = <MOD_LSFT>;
        };
        shift_9: shift_9_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp RIGHT_PARENTHESIS>; // Normal: 9, Shift: )
            mods = <MOD_LSFT>;
        };
        shift_dot: shift_dot_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>; // Normal: . , Shift: :
            mods = <MOD_LSFT>;
        };
        shift_minus: shift_minus_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_MINUS>, <&kp UNDERSCORE>; // Normal: - , Shift: _
            mods = <MOD_LSFT>;
        };
        shift_comma: shift_comma_behavior {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>; // Normal: , , Shift: ;
            mods = <MOD_LSFT>;
        };
    };
        keymap {
        compatible = "zmk,keymap";

        default_layer {// layer 0
            // -----------------------------------------------------------------------------------------
            // |  TAB  |  1 (+,|) |  2 (",@) |  3 (*,#) |  4 (ç,¼) |  5 (%,½) |   |  6 (&,¬) |  7 (/,|) |  8 ((,¢)) |  9 () |  0 (=) | BSPC |
            // |  TAB  |   Q     |    W     |    E     |    R     |    T     |   |    Y     |    U     |    I     |    O     |    P     | BSPC |
            // | CTRL  |   A     |    S     |    D     |    F     |    G     |   |    H     |    J     |    K     |    L     |    ;     |   '   |
            // | SHFT  |   Z     |    X     |    C     |    V     |    B     |   |    N     |    M     |    ,     |    .     |    /     |  ESC  |
            //                 | GUI |  LWR  |   SPC    |       |   ENT    |  RSE   | ALT |
            bindings = <
                // Row 1
                &kp ESC      &shift_1  &shift_2  &shift_3  &shift_4  &shift_5  &shift_6  &shift_7  &shift_8  &shift_9  &shift_0 &kp BSPC 

                // Row 2
                &kp TAB    &kp Q     &kp W     &kp E     &kp R     &kp T           &kp Z      &kp U      &kp I      &kp O     &kp P     &de_uezu

                // Row 3
                &kp LSHFT  &kp A     &kp S     &kp D     &kp F     &kp G           &kp H      &kp J      &kp K      &kp L     &de_oe  &de_ae

                // Row 4
                &kp LCTRL   &kp Y     &kp X     &kp C     &kp V     &kp B           &kp N      &kp M      &shift_comma  &shift_dot  &shift_minus   &kp ESC

                // Thumb row (modifiers and space/return)
                           &kp LGUI  &mo 2 &kp RET              &kp SPACE     &kp ESC    &kp LALT
            >;
        };
        altgr_layer{// layer 1 NOT USED AT THE MOMENT
            // -----------------------------------------------------------------------------------------
            // |  TAB  |  1 (+,|) |  2 (",@) |  3 (*,#) |  4 (ç,¼) |  5 (%,½) |   |  6 (&,¬) |  7 (/,|) |  8 ((,¢)) |  9 () |  0 (=) | BSPC |
            // |  TAB  |   Q     |    W     |    E     |    R     |    T     |   |    Y     |    U     |    I     |    O     |    P     | BSPC |
            // | CTRL  |   A     |    S     |    D     |    F     |    G     |   |    H     |    J     |    K     |    L     |    ;     |   '   |
            // | SHFT  |   Z     |    X     |    C     |    V     |    B     |   |    N     |    M     |    ,     |    .     |    /     |  ESC  |
            //                 | GUI |  LWR  |   SPC    |       |   ENT    |  RSE   | ALT |
            bindings = <
                // Row 1
                &kp ESC      &kp N1    &kp AT_SIGN    &kp HASH  &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp BSPC

                // Row 2
                &kp TAB     &kp Q     &kp W     &kp E     &kp R     &kp T           &kp Y      &kp U      &kp I      &kp O     &kp P     &kp BSPC

                // Row 3
                &kp LSHFT   &kp A     &kp S     &kp D     &kp F     &kp G           &kp H      &kp J      &kp K      &kp L     &kp SEMI  &kp SQT

                // Row 4
                &kp LCTRL   &kp Z     &kp X     &kp C     &kp V     &kp B           &kp N      &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp ESC

                // Thumb row (modifiers and space/return)
                           &kp LGUI  &kp N1     &kp RET              &kp SPACE     &kp N1      &kp RALT
            >;
        };
        code_layer{// layer 2
            // -----------------------------------------------------------------------------------------
            // |  TAB  |  1 (+,|) |  2 (",@) |  3 (*,#) |  4 (ç,¼) |  5 (%,½) |   |  6 (&,¬) |  7 (/,|) |  8 ((,¢)) |  9 () |  0 (=) | BSPC |
            // |  TAB  |   Q     |    W     |    E     |    R     |    T     |   |    Y     |    U     |    I     |    O     |    P     | BSPC |
            // | CTRL  |   A     |    S     |    D     |    F     |    G     |   |    H     |    J     |    K     |    L     |    ;     |   '   |
            // | SHFT  |   Z     |    X     |    C     |    V     |    B     |   |    N     |    M     |    ,     |    .     |    /     |  ESC  |
            //                 | GUI |  LWR  |   SPC    |       |   ENT    |  RSE   | ALT |
            bindings = <
                // Row 1
                &kp ESC      &kp N1    &kp AT_SIGN    &kp N3    &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9    &kp QUESTION    &kp BSPC

                // Row 2
                &kp TAB    &kp Q     &kp W      &kp UP_ARROW    &kp TILDE     &kp PIPE           &kp LEFT_BRACKET   &kp RIGHT_BRACKET  &kp EXCLAMATION     &kp DOLLAR     &kp P     &kp BSPC

                // Row 3
                &kp LSHFT   &kp A    &kp LEFT_ARROW   &kp DOWN_ARROW     &kp UP_ARROW     &kp G     &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS   &kp SEMI  &kp SQT

                // Row 4
                &kp LCTRL   &kp Z     &kp X     &kp C     &kp V     &kp GRAVE           &kp LESS_THAN  &kp GREATER_THAN   &kp COMMA  &kp DOT   &kp FSLH  &kp ESC

                // Thumb row (modifiers and space/return)
                           &kp LGUI  &kp N1     &kp RET              &kp SPACE     &kp  SLASH   &kp  EQUAL
            >;
        };

        bt_layer{// layer 3 
            // -----------------------------------------------------------------------------------------
            // |  TAB  |  1 (+,|) |  2 (",@) |  3 (*,#) |  4 (ç,¼) |  5 (%,½) |   |  6 (&,¬) |  7 (/,|) |  8 ((,¢)) |  9 () |  0 (=) | BSPC |
            // |  TAB  |   Q     |    W     |    E     |    R     |    T     |   |    Y     |    U     |    I     |    O     |    P     | BSPC |
            // | CTRL  |   A     |    S     |    D     |    F     |    G     |   |    H     |    J     |    K     |    L     |    ;     |   '   |
            // | SHFT  |   Z     |    X     |    C     |    V     |    B     |   |    N     |    M     |    ,     |    .     |    /     |  ESC  |
            //                 | GUI |  LWR  |   SPC    |       |   ENT    |  RSE   | ALT |
            bindings = <
                // Row 1
                &kp ESC      &kp N1    &kp AT_SIGN    &kp HASH  &kp N4    &kp N5          &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp BSPC

                // Row 2
                &kp TAB     &kp Q     &kp W     &kp E     &kp R     &kp T           &kp Y      &kp U      &kp I      &kp O     &kp P     &kp BSPC

                // Row 3
                &kp LSHFT   &kp A     &kp S     &kp D     &kp F     &kp G           &kp H      &kp J      &kp K      &kp L     &kp SEMI  &kp SQT

                // Row 4
                &kp LCTRL   &kp Z     &kp X     &kp C     &kp V     &kp B           &kp N      &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp ESC

                // Thumb row (modifiers and space/return)
                           &kp LGUI  &kp N1     &kp RET              &kp SPACE     &kp N1      &kp RALT
            >;
        };
    };
};

